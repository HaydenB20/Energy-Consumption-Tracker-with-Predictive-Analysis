{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api'; // Adjust the base URL as needed\n\nexport const fetchEnergyConsumptionData = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/energy-consumption`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error fetching energy consumption data: ' + error.message);\n  }\n};\nexport const submitEnergyConsumptionData = async data => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/energy-consumption`, data);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error submitting energy consumption data: ' + error.message);\n  }\n};\nexport const fetchPredictiveAnalytics = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/predictive-analytics`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error fetching predictive analytics: ' + error.message);\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","fetchEnergyConsumptionData","response","get","data","error","Error","message","submitEnergyConsumptionData","post","fetchPredictiveAnalytics"],"sources":["/Users/hburke/ECTPA/energy-consumption-tracker/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:5000/api'; // Adjust the base URL as needed\n\nexport const fetchEnergyConsumptionData = async () => {\n    try {\n        const response = await axios.get(`${API_BASE_URL}/energy-consumption`);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error fetching energy consumption data: ' + (error as any).message);\n    }\n};\n\nexport const submitEnergyConsumptionData = async (data: any) => {\n    try {\n        const response = await axios.post(`${API_BASE_URL}/energy-consumption`, data);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error submitting energy consumption data: ' + (error as any).message);\n    }\n};\n\nexport const fetchPredictiveAnalytics = async () => {\n    try {\n        const response = await axios.get(`${API_BASE_URL}/predictive-analytics`);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error fetching predictive analytics: ' + (error as any).message);\n    }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B,CAAC,CAAC;;AAElD,OAAO,MAAMC,0BAA0B,GAAG,MAAAA,CAAA,KAAY;EAClD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,YAAY,qBAAqB,CAAC;IACtE,OAAOE,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,0CAA0C,GAAID,KAAK,CAASE,OAAO,CAAC;EACxF;AACJ,CAAC;AAED,OAAO,MAAMC,2BAA2B,GAAG,MAAOJ,IAAS,IAAK;EAC5D,IAAI;IACA,MAAMF,QAAQ,GAAG,MAAMH,KAAK,CAACU,IAAI,CAAC,GAAGT,YAAY,qBAAqB,EAAEI,IAAI,CAAC;IAC7E,OAAOF,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,GAAID,KAAK,CAASE,OAAO,CAAC;EAC1F;AACJ,CAAC;AAED,OAAO,MAAMG,wBAAwB,GAAG,MAAAA,CAAA,KAAY;EAChD,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,YAAY,uBAAuB,CAAC;IACxE,OAAOE,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,uCAAuC,GAAID,KAAK,CAASE,OAAO,CAAC;EACrF;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}